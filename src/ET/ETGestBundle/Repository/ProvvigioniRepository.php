<?php

namespace ET\ETGestBundle\Repository;

/**
 * ProvvigioniRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProvvigioniRepository extends \Doctrine\ORM\EntityRepository
{
    function getProvvigioniList($dateFilter = null, $userRepository = null) {
        
        list($date['year'], $date['month']) = explode('-', '20' . str_replace('20', '', ($dateFilter ? $dateFilter : date('Y-m-d'))));

		$qb = $this->getEntityManager()->createQueryBuilder('prov');
        
		$qb->select("prov.codpromotore as codPromotore, prov.provvigione, prov.idViaggio as id_viaggio, prov.idModulo as id_modulo, prov.tipodocumento as tipoDocumento, prov.importo, prov.promotoresaldato as promotoreSaldato");
		$qb->addSelect("CONCAT(prov.idModulo, '-', prov.tipodocumento, '-', prov.provvigione) as modulo");
		$qb->addSelect("DATE_FORMAT(prov.data, '%Y%m%d%H%i%s') AS data");        
		$qb->addSelect("DATE_FORMAT(prov.data, '%Y%m') AS periodo");
        $qb->addSelect("DATE_FORMAT(prov.datasaldato, '%Y%m%d%H%i%s') AS dataSaldato");
        $qb->addSelect("vg.tipologia as tipologia, vg.descrizione, vg.idAnagrafica as id_anagrafica, vg.codpromotore AS promVendita, vg.titoloIt as titolo_it, vg.titoloEs as titolo_es, vg.titoloEn as titolo_en");
        $qb->addSelect("CONCAT(ana.cognome, ' ', ana.nome) AS cliente");
        
		$qb->from('ETGestBundle:Provvigioni', 'prov');
		$qb->leftJoin('ETGestBundle:Viaggi', 'vg', \Doctrine\ORM\Query\Expr\Join::WITH, 'prov.idViaggio=vg.idViaggio');
        $qb->leftJoin('ETGestBundle:Anagrafiche', 'ana', \Doctrine\ORM\Query\Expr\Join::WITH, 'vg.idAnagrafica=ana.idAnagrafica');
		        
		$qb->andWhere('YEAR(prov.data) = :year');
        $qb->andWhere('MONTH(prov.data) = :month');
        $qb->andWhere('prov.agenzia = :agenzia');
        $qb->andWhere('prov.idViaggio >= :start_id_viaggio or prov.idViaggio = 0');        
        
		$qb->setParameters(array(
                'start_id_viaggio' => 20000000, 
                'year' => $date['year'],
                'month' => $date['month'],
                'agenzia' => 'ETIta'
            )
        );

		$qb->addOrderBy('periodo', 'DESC');
		$qb->addOrderBy('prov.codpromotore');
        $qb->addOrderBy('modulo', 'DESC');

        $result = $qb->getQuery()->getResult();

        $provvigione = array();
        $total = 0;
        if (count($result) > 0) {
            foreach ($result as $key => $row) {
                // promoter
                $raggr_1 = 'periodo';
                $raggr_2 = 'codPromotore';
                $raggr_3 = 'id_viaggio';
                $raggr_4 = 'modulo';
                
                // general
                if (!isset($provvigione['totale'])) {
                    $provvigione['totale'] = 0;
                }
                $provvigione['totale'] += $row['importo'];                
                
                // periodo
                $provvigione['array'][$row[$raggr_1]]['periodo'] = $row['periodo'];
                $provvigione['array'][$row[$raggr_1]]['periodoDate'] = \DateTime::createFromFormat('Ym', $row['periodo'])->format('F Y');
                if (!isset($provvigione['array'][$row[$raggr_1]]['totale'])) {
                    $provvigione['array'][$row[$raggr_1]]['totale'] = 0;
                }
                $provvigione['array'][$row[$raggr_1]]['totale'] += $row['importo'];

                // promotore
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['codPromotore'] = $row['codPromotore'];
                                
                $userArray = $userRepository->getEntityManager()
                    ->createQueryBuilder('u')
                    ->select("u.multiagenziaId, u.id, CONCAT(u.contrattoCognome, ' ', u.contrattoNome) as fullname")
                    ->from('ETUserBundle:Users','u')
                    ->where('u.id = :userid')
                    ->setParameter('userid', $row['codPromotore'])
                    ->getQuery()->getResult();    
                
                $objectUser = $userArray[0];                       
                        
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['multiagenzia_id'] = $objectUser['multiagenziaId'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['nome'] = $objectUser['fullname'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['promotoreSaldato'] = $row['promotoreSaldato'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['dataSaldato'] = $row['dataSaldato'];
                if (!isset($provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['totale'])) {
                    $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['totale'] = 0;
                }
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['totale'] += $row['importo'];

                $arrayProvvigione = array('ET', 'promotore', 'riferimento', 'PP', 'PR', 'PET', 'altre provvigioni');
  
                // viaggio
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['tipologia'] = str_replace('%', '', $row['tipologia']);
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['descrizione'] = '';
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['provvigione'] = ( (in_array($row['provvigione'], $arrayProvvigione) || empty($provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['array']) ) ? $row['provvigione'] : 'altre provvigioni' );
                
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['id_anagrafica'] = $row['id_anagrafica'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['id_viaggio'] = $row['id_viaggio'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['promVendita'] = $row['promVendita'];
                
                $saleUserArray = $userRepository->getEntityManager()
                    ->createQueryBuilder('u')
                    ->select("CONCAT(u.contrattoCognome, ' ', u.contrattoNome) as fullname")
                    ->from('ETUserBundle:Users','u')
                    ->where('u.id = :userid')
                    ->setParameter('userid', $row['promVendita'])
                    ->getQuery()->getResult();    
                
                $objectSaleUser = $saleUserArray[0];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['promVenditaName'] = $objectSaleUser['fullname'];
                
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['cliente'] = $row['cliente'];

                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['titolo_it'] = $row['titolo_it'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['titolo_es'] = $row['titolo_es'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['titolo_en'] = $row['titolo_en'];

                if (!isset($provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['totale'])) {
                    $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['totale'] = 0;
                }
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['totale'] += $row['importo'];

                // modulo
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['array'][$row[$raggr_4]]['modulo'] = $row['id_modulo'];
                $document = $this->getDoc();
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['array'][$row[$raggr_4]]['tipoDocumento'] = $document['doc'][$row['tipoDocumento']]['desc'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['array'][$row[$raggr_4]]['tipo'] = $row['tipoDocumento'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['array'][$row[$raggr_4]]['totale'] = $row['importo'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['array'][$row[$raggr_4]]['provvigione'] = $row['provvigione'];
                $provvigione['array'][$row[$raggr_1]]['array'][$row[$raggr_2]]['array'][$row[$raggr_3]]['array'][$row[$raggr_4]]['dettaglio'] = 'Dettagli: Nd';
            }

            return $provvigione;
        } else {
            return false;
        }                
    }
    
    public function getDoc() {
        $document = array();
        $i=0;
        $doc[$i]['desc'] = 'Prenotazione';
        
        $i=1;        
        $doc[$i]['desc'] = 'Prenotazione Traghetto';        

        $i=2;
        $doc[$i]['desc'] = 'Volo di linea';
        
        $i=3;        
        $doc[$i]['desc'] = 'Volo Low Cost';
        
        $i=4;        
        $doc[$i]['desc'] = 'Annullamento';
        
        $i=5; // note viaggio

        $i=6; // note cliente        

        $i=7; // note lotus

        $i=8; // riscontro vacanze        

        $i=9; // storno provvigioni
        $doc[$i]['desc'] = 'Storno provvigioni';        

        $i=10;//assicurazione
        $doc[$i]['desc'] = 'Assicurazione integrativa';
        
        $i=11;//preventivo       
        $doc[$i]['desc'] = 'Preventivo';        

        $i=12;//serviziWeb
        $doc[$i]['desc'] = 'Servizi Web';

        $i=13;// contratti
        $doc[$i]['desc'] = 'Contratti';

        $i=14; // Allega pagamento
        $doc[$i]['desc'] = '';
        
        $i=15; // modalit� pagamento        

        $i=16; // mail contratto

        $i=17; // Invio documenti di viaggio elettronico        

        $i=18; // Allego estratto conto visibile promotore
        
        $i=19; // Allego estratto conto        

        $i=20; // Invio documenti di viaggio corriere
        
        $i=21; // Attesa preventivo	vecchio modulo
        
        $i=22; // Dettaglio richiesta        

        $i=23; // Attesa preventivo        

        $i=24; // Modifica pratica
        $doc[$i]['desc'] = 'Modifica pratica';        

        $i=25;	// note per il booking

        $i=26;	// note per l'amministazione        

        $i=27;	// rifiuta prenotazione
        
        $i=28; // note viaggio        

        $i=29; //preventivo
        $doc[$i]['desc'] = 'Preventivo';

        $i=30;
        $doc[$i]['desc'] = 'Donazione';        
        
        $document['doc'] = $doc;
        
        return $document;
    }

}
